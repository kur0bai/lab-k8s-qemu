- name: Add Kubernetes GPG key
  ansible.builtin.get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
    dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
    mode: "0644"

- name: Add Kubernetes repository
  ansible.builtin.apt_repository:
    repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /
    filename: kubernetes
    state: present
    update_cache: yes

- name: Install Kubernetes components
  ansible.builtin.apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    update_cache: yes

- name: Hold kube packages
  command: apt-mark hold {{ item }}
  loop:
    - kubelet
    - kubeadm
    - kubectl
  changed_when: false

#necessary
- name: Install containerd
  apt:
    name: containerd
    state: present
    update_cache: yes

- name: Create containerd config directory
  file:
    path: /etc/containerd
    state: directory

- name: Generate default containerd config
  command: containerd config default
  register: containerd_config
  changed_when: false

- name: Write containerd config file
  copy:
    dest: /etc/containerd/config.toml
    content: "{{ containerd_config.stdout }}"

- name: Enable SystemdCgroup in containerd config
  replace:
    path: /etc/containerd/config.toml
    regexp: "SystemdCgroup = false"
    replace: "SystemdCgroup = true"

- name: Restart containerd
  service:
    name: containerd
    state: restarted
    enabled: yes

#fowardingf
- name: Enable net.ipv4.ip_forward
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: yes

- name: Init Kubernetes cluster
  command: kubeadm init --pod-network-cidr={{ pod_network_cidr }}
  args:
    creates: /etc/kubernetes/admin.conf

- name: Create .kube directory
  file:
    path: /home/ubuntu/.kube
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: "0755"

- name: Copy kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/ubuntu/.kube/config
    remote_src: yes
    owner: ubuntu
    group: ubuntu
    mode: "0644"

- name: Install Flannel CNI
  command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Get join command
  shell: kubeadm token create --print-join-command
  register: join_cmd
  changed_when: false

- name: Save join command
  set_fact:
    join_command: "{{ join_cmd.stdout }}"
